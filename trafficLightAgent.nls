; ********************************************************************************************************************************************************
;***          Traffic lights (contains all the code for the Traffic lights)                                                                                    ****
;*********************************************************************************************************************************************************



;*********************************************************************************************************************************************************
; LOGBOOK OF UPDATES IN THIS FILE
; --Date--- |-----Description--------------------------------------------------------------------------------|---Person(s)-------------------------------
; 20250423    Initial template of a dummy-breed to be adapted by the project group                               Gion
; 20250426    skapa atemplete                                                                                    Fadi
; 20250426     skapa nya traffic lights (korsningar)                                                             Hamdi
; 20250501    börja med proactiva delen  (beliefs)                                                               Daniel                                                                   
; 20250501    fortsätta med proactiva delen  (deliberation och intention)                                        Hamdi och Daniel
; 20250503    proactiva delen klar                                                                               Daniel och Fadi 
; 20250505    tester med hybrid agent                                                                            Fadi 
; 20250507    sätta ihop denna reactiva och proactiva tsm genom hybrid                                           Daniel och Hamdi
; 20250512    la till fler traffiljust och gjort om koden för skapandet av traffikljus så att det blir enklare   Hamdi 
; 20250512    fixa det ett litet bug med traffiljusen och fixade till positionerna av vissa traffikljus          Hamdi 
;
;********************end logbook ************************************************************************************************************************
;*********************************************************************************************************************************************************

;Local Varaiables 
;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************
traffic-lights-own [
  remaining-ticks
  state          
  group
  crossing
  belief
  desire
  intention
  crossing-timer 
  incoming-queue
]
;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************


; SETUP FUNCTIONS
;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************

to setup-crossings-data
  set crossings [ 
    [ 
      1  ; Crossing number
      [ [ -87 12 3 ] [ -81 -12 3 ] [ -77 3 2 ] [ -77 -3 2 ] ]  
      [ [ -87 -7 2 ] [ -87 7 2 ] [ -81 -7 2 ] [ -81 7 2 ] [ -72 2 3 ] ] 
    ]
    
    [ 
      2
      [ [ -39 -12 3 ] [ -45 12 3 ] [ -49 3 2 ] [ -49 -3 2 ] [ -35 -3 2 ] [ -35 3 2 ] ]
      [ [ -39 7 2 ] [ -45 7 2 ] [ -45 -7 2 ] [ -39 -7 2 ] [ -30 3 3 ] [ -54 -3 3 ] ]
    ]
   
    [ 
      3
      [ [ -3 12 3 ] [ 3 -12 3 ] [ -7 3 2 ] [ -7 -3 2 ] [ 7 3 2 ] [ 7 -3 2 ] ]
      [ [ 3 7 2 ] [ 3 -7 2 ] [ -3 7 2 ] [ -3 -7 2 ] [ 12 3 3 ] [ -12 -3 3 ] ]
    ]
    
    [ 
      4
      [ [ 39 12 3 ] [ 45 -12 3 ] [ 49 3 2 ] [ 49 -3 2 ] [ 35 3 2 ] [ 35 -3 2 ] ]
      [ [ 45 7 2 ] [ 45 -7 2 ] [ 39 7 2 ] [ 39 -7 2 ] [ 54 3 3 ] [ 30 -3 3 ] ]
    ]
    
    [ 
      5
      [ [ 81 12 3 ] [ 87 -12 3 ] [ 77 3 2 ] [ 77 -3 2 ] ]
      [ [ 87 -7 2 ] [ 87 7 2 ] [ 81 -7 2 ] [ 81 7 2 ] [ 72 -2 3 ] ]
    ] 
    
     [ 
      6
      [ [ -39 30 3 ] [ -45 54 3 ] [ -49 45 2 ] [ -49 39 2 ] [ -35 45 2 ] [ -35 39 2 ] ]
      [ [ -39 49 2 ] [ -45 49 2 ] [ -45 35 2 ] [ -39 35 2 ] [ -30 45 3 ] [ -54 39 3 ] ]
    ]
    
     [ 
      7
      [ [ -3 54 3 ] [ 3 30 3 ] [ -7 45 2 ] [ -7 39 2 ] [ 7 45 2 ] [ 7 39 2 ] ]
      [ [ 4 49 2 ] [ 4 35 2 ] [ -3 49 2 ] [ -3 35 2 ] [ 12 45 3 ] [ -12 39 3 ] ]
    ]
    
        [ 
      8
      [ [ 39 54 3 ] [ 45 30 3 ] [ 49 45 2 ] [ 49 39 2 ] [ 35 45 2 ] [ 35 39 2 ] ]
      [ [ 45 49 2 ] [ 45 35 2 ] [ 39 35 2 ] [ 39 49 2 ] [ 54 45 3 ] [ 30 40 3 ] ]
    ]
    
    
    
      [ 
      9
      [ [ -39 72 3 ]  [ -49 81 2 ] [ -49 87 2 ] [ -35 81 2 ] [ -35 87 2 ] ]
      [ [ -39 77 2 ] [ -45 77 2 ] [ -30 87 3 ] [ -54 81 3 ] ]
    ]
    
      [ 
      10
      [ [ 3 72 3 ] [ -7 81 2 ] [ -7 87 2 ] [ 7 81 2 ] [ 7 87 2 ] ]
      [ [ -3 77 2 ] [ 4 77 2 ] [ 12 87 3 ] [ -12 81 3 ] ]
    ]
    
    [ 
      11
      [[ 45 72 3 ] [ 49 81 2 ] [ 49 87 2 ] [ 35 81 2 ] [ 35 87 2 ] ]
      [ [ 39 77 2 ] [ 46 77 2 ] [ 54 87 3 ] [ 30 81 3 ] ]
    ]
    
    
     [ 
      12
      [ [ -45 -30 3 ]  [ -49 -39 2 ] [ -49 -45 2 ] [ -35 -39 2 ] [ -35 -45 2 ] ]
      [ [ -38 -35 2 ] [ -45.5 -35 2 ] [ -30 -39 3 ] [ -54 -45 3 ] ]
    ]
    
      [ 
      13
      [ [ -3 -30 3 ] [ -7 -39 2 ] [ -7 -45 2 ] [ 7 -39 2 ] [ 7 -45 2 ] ]
      [ [ -4 -35 2 ] [ 4 -35 2 ] [ 12 -39 3 ] [ -12 -45 3 ] ]
    ]
    
     [ 
      14
      [[ 39 -30 3 ] [ 49 -39 2 ] [ 49 -45 2 ] [ 35 -39 2 ] [ 35 -45 2 ] ]
      [ [ 39 -35 2 ] [ 46 -35 2 ] [ 54 -39 3 ] [ 30 -45 3 ] ]
    ] 
  ]
end
to create-lights
 setup-crossings-data  
  foreach crossings [ cr ->
    let cn item 0 cr   
    let vert item 1 cr  
    let horz item 2 cr  

    foreach vert [ v ->
      create-traffic-lights 1 [
        setxy item 0 v item 1 v
        set shape "circle"  
        set color green
        set size item 2 v
        set state "green"
        set group "vertical"
        set crossing cn
        set belief "unknown"
        set desire "none"
        set intention "none"
        set crossing-timer 0
        set incoming-queue[]
      ]
    ]

    foreach horz [ h ->
      create-traffic-lights 1 [
        setxy item 0 h item 1 h
        set shape "circle"
        set color red
        set size item 2 h
        set state "red"
        set group "horizontal"
        set crossing cn
        set belief "unknown"
        set desire "none"
        set intention "none"
        set crossing-timer 0
        set incoming-queue[]
      ]
    ]
  ]
end

;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************


; UPDATE BELIEFS
;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************

to update-beliefs  ;; turtle procedure
  if crossing-timer mod 5000 = 0 [
    set belief "time-to-switch"
  ]
  if crossing-timer mod 5000 != 0 [
    set belief "no-change"
  ]
end
;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************


; PROACTIVE BEHAVIOR
;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************
to deliberate  ;; turtle procedure
  if belief = "time-to-switch" [
    if group = "vertical" [
      if color = green [ set desire "turn-red" ]
      if color = red [ set desire "turn-green" ]
    ]
    if group = "horizontal" [
      if color = red [ set desire "turn-green" ]
      if color = green [ set desire "turn-red" ]
    ]
  ]
  if belief = "no-change" [
    set desire "none"
  ]
end

to formulate-intention  ;; turtle procedure
  if desire = "turn-green" [
    set intention "be-green"
  ]
  if desire = "turn-red" [
    set intention "be-red"
  ]
  if desire = "none" [
    set intention "none"
  ]
end

to execute  ;; turtle procedure
  if intention = "be-green" [
    set color green
    set crossing-timer 0  ;; Reset timer after switching
  ]
  if intention = "be-red" [
    set color red
    set crossing-timer 0  ;; Reset timer after switching
  ]
end

to proactive_traffic-light  ;; turtle procedure
  update-beliefs
  deliberate
  formulate-intention
  execute
  set crossing-timer crossing-timer + 1
end

;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************

; REACTIVE SUBSUMPTION HIERARCHY
;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************
to reactive_traffic_light
 foreach remove-duplicates [crossing] of traffic-lights [ cr ->
    let cr-lights traffic-lights with [crossing = cr]
    ask cr-lights [ if remaining-ticks > 0 [ set remaining-ticks remaining-ticks - 1 ] ]

    let p-lights cr-lights with [group = "vertical"]
    let v-lights cr-lights with [group = "horizontal"]

    ; Find the currently active group for this crossing
    let active-group first [group] of (cr-lights with [state = "green"])
    ifelse (active-group != nobody) [
      let current-lights cr-lights with [group = active-group]
      let phase-done? all? current-lights [remaining-ticks = 0]

      let peds-in-p? any? p-lights with [any? humans in-radius 3]
      let peds-in-v? any? v-lights with [any? humans in-radius 3]

      if phase-done? [
        ifelse (peds-in-p? or peds-in-v?) [
          let target-group ifelse-value (peds-in-p?) ["vertical"] ["horizontal"]
          ask cr-lights with [group = target-group] [
            set state "green"
            set color green
            set remaining-ticks 5
          ]
          ask cr-lights with [group != target-group] [
            set state "red"
            set color red
            set remaining-ticks 0
          ]
        ][
        ask cr-lights [ proactive_traffic-light ]
        ]
      ]
    ][
      ; No active group (initialize)
      ask cr-lights with [group = "vertical"] [
        set state "green"
        set color green
        set remaining-ticks 5
      ]
    ]
  ]
end

;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************


;RUN-FUNCTION
;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************
to run-light
 update-beliefs
 reactive_traffic_light

end
;*********************************************************************************************************************************************************
;*********************************************************************************************************************************************************


